---
- name: Create a InvoiceNinja directory
  file:
    path: /home/{{ user_var }}/invoiceninja
    state: directory

- name: Download and unzip stable version of Invoice Ninja
  git:
    repo: https://github.com/invoiceninja/dockerfiles.git
    dest: /home/{{ user_var }}/invoiceninja
    force: true

- name: Copy files from the 'debian' directory into the main one
  copy:
    src: /home/{{ user_var}}/invoiceninja/debian/
    dest: /home/{{ user_var }}/invoiceninja
    remote_src: true

- name: Remove the now no longer necessary 'debian' directory
  file:
    state: absent
    path: /home//{{ user_var }}/invoiceninja/debian

- name: Change the port for invoiceninja
  lineinfile:
    dest: /home/{{ user_var }}/invoiceninja/docker-compose.yml
    regexp: '      - ".*:80"'
    line: '      - "8087:80"'

- name: Generate APP_KEY
  become: true
  command: "docker run --rm invoiceninja/invoiceninja \
  php artisan key:generate --show"
  register: key

- name: Define environment variables
  lineinfile:
    path: /home/{{ user_var }}/invoiceninja/.env
    regexp: '{{ item.From }}'
    line: '{{ item.To }}'
    state: present
  loop:
    # App
    - {From: 'APP_URL=', To: 'APP_URL={{ app_url }}'}
    - {From: 'APP_KEY=', To: 'APP_KEY={{ key.stdout }}'}
    - {From: 'APP_DEBUG=', To: 'APP_DEBUG={{ app_debug }}'}
    - {From: 'REQUIRE_HTTPS=', To: 'REQUIRE_HTTPS={{ require_https }}'}
    # Database
    - {From: 'DB_HOST=', To: 'DB_HOST={{ db_host }}'}
    - {From: 'DB_PORT=', To: 'DB_PORT={{ db_port }}'}
    - {From: 'DB_DATABASE=', To: 'DB_DATABASE={{ db_database }}'}
    - {From: 'DB_USERNAME=', To: 'DB_USERNAME={{ db_username }}'}
    - {From: 'DB_PASSWORD=', To: 'DB_PASSWORD={{ db_password }}'}
    # Initial user
    - {From: 'IN_USER_EMAIL=', To: 'IN_USER_EMAIL={{ in_user_email }}'}
    - {From: 'IN_PASSWORD=', To: 'IN_PASSWORD={{ in_password }}'}
    # Mail
    - {From: 'MAIL_MAILER=', To: 'MAIL_MAILER={{ mail_mailer }}'}
    - {From: 'MAIL_HOST=', To: 'MAIL_HOST={{ mail_host }}'}
    - {From: 'MAIL_PORT=', To: 'MAIL_PORT={{ mail_port }}'}
    - {From: 'MAIL_USERNAME=', To: 'MAIL_USERNAME="{{ mail_username }}"'}
    - {From: 'MAIL_PASSWORD=', To: 'MAIL_PASSWORD="{{ mail_password }}"'}
    - {From: 'MAIL_ENCRYPTION=', To: 'MAIL_ENCRYPTION={{mail_encryption}}'}
    - {From: 'MAIL_FROM_ADDRESS=',
       To: 'MAIL_FROM_ADDRESS="{{ mail_from_address }}"'
    }
    - {From: 'MAIL_FROM_NAME=', To: 'MAIL_FROM_NAME="{{ mail_from_name }}"'}
    # MySql
    - {From: 'MYSQL_ROOT_PASSWORD=',
       To: 'MYSQL_ROOT_PASSWORD={{ mysql_root_password }}'
    }
    - {From: 'MYSQL_USER=', To: 'MYSQL_USER={{ mysql_user }}'}
    - {From: 'MYSQL_PASSWORD=', To: 'MYSQL_PASSWORD={{ mysql_password }}'}
    - {From: 'MYSQL_DATABASE=', To: 'MYSQL_DATABASE={{ mysql_database }}'}

- name: Change permissions of docker/app/public
  file:
    path: /home/{{ user_var }}/invoiceninja/docker/app/public
    mode: "0755"
  become: true

- name: Change ownership of docker/app and its children
  become: true
  file:
    path: /home/{{ user_var }}/invoiceninja/docker/app/
    state: directory
    recurse: true
    owner: "1500"
    group: "1500"

- name: Set CHMOD separately in docker file so that it does not require BuildKit to run
  lineinfile:
    path: /home/{{ user_var }}/invoiceninja/Dockerfile
    regexp: "COPY --chmod=0755 scripts/init.sh /usr/local/bin/init.sh"
    line: "COPY scripts/init.sh /usr/local/bin/init.sh\nRUN chmod 755 /usr/local/bin/init.sh"
    state: present

- name: Run docker-compose
  become: true
  community.docker.docker_compose_v2:
    project_src: /home/{{user_var}}/invoiceninja
    files: docker-compose.yml
    state: present
