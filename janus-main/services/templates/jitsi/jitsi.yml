---
########################################
- name: Create Jitsi directory
  file:
    path: /home/{{ user_var }}/jitsi
    state: directory
########################################
- name: Download and unzip stable version of Jitsi
  unarchive:
    src: '{{ repo }}/archive/refs/tags/{{ stable_version }}.zip'
    dest: /home/{{ user_var }}/jitsi
    remote_src: true
########################################
- name: Copy .env
  copy:
    src: /home/{{user_var}}/jitsi/{{stable_version_dir}}/env.example
    dest: /home/{{user_var}}/jitsi/{{stable_version_dir}}/.env
    remote_src: true
########################################
- name: Configure '/home/{{user_var}}/jitsi/{{stable_version_dir}}/.env'
  lineinfile:
    path: /home/{{ user_var }}/jitsi/{{ stable_version_dir }}/.env
    regexp: '{{item.From}}'
    line: '{{item.To}}'
    state: present
  with_items:
    - {From: 'PUBLIC_URL=', To: 'PUBLIC_URL=https://localhost:8443'}
    - {From: 'JVB_ADVERTISE_IPS=', To: 'JVB_ADVERTISE_IPS=127.0.0.1'}
    - {From: 'HTTP_PORT=', To: 'HTTP_PORT=8090'}
    - {From: 'HTTPS_PORT=', To: 'HTTPS_PORT=8443'}


########################################
- name: Generate passwords
  shell: '/home/{{user_var}}/jitsi/{{stable_version_dir}}/gen-passwords.sh'
########################################
- name: Create required CONFIG directories
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - ~/.jitsi-meet-cfg/web
    - ~/.jitsi-meet-cfg/transcripts
    - ~/.jitsi-meet-cfg/prosody/config
    - ~/.jitsi-meet-cfg/prosody/prosody-plugins-custom
    - ~/.jitsi-meet-cfg/jicofo
    - ~/.jitsi-meet-cfg/jvb
    - ~/.jitsi-meet-cfg/jigasi
    - ~/.jitsi-meet-cfg/jibri
########################################
- name: Replace ports in docker-compose.yml for NAT compatibility
  replace:
    path: /home/{{user_var}}/jitsi/{{ stable_version_dir }}/docker-compose.yml
    regexp: '^\s*-\s*"443:443"$'
    replace: '      - "8443:443"'
  notify: restart jitsi

- name: Replace HTTP port in docker-compose.yml
  replace:
    path: /home/{{user_var}}/jitsi/{{ stable_version_dir }}/docker-compose.yml
    regexp: '^\s*-\s*"8080:80"$'
    replace: '      - "8090:80"'
########################################
- name: Run docker-compose
  become: true
  community.docker.docker_compose_v2:
    project_src: /home/{{user_var}}/jitsi/{{ stable_version_dir }}
    files: docker-compose.yml
    state: present
