---
# Playbook: deploy Mattermost (Docker Compose) + run the existing mattermost_bot as a separate Docker container
# Constraints:
# - Keep EXACT paths used previously:
#   * WorkingDirectory: /home/{{ user_var }}/mattermost_bot
#   * HOME=/home/{{ user_var }}
#   * Images at /home/{{ user_var }}/images
#   * MATTERMOST_URL = http://127.0.0.1:{{ MATTERMOST_PORT }}/api/v4 (same as before)
# - Do NOT introduce new paths. Bind-mount /home/{{ user_var }} inside the container at the SAME path.
# - Remove venv/systemd. Replace with Docker Compose for the bot.
# - Mattermost remains deployed via the existing included compose template.

- name: Configure Mattermost (compose) and run Agents (compose) with identical paths
  hosts: user_domain
  gather_facts: true
  remote_user: "{{ user_var }}"
  connection: local

  vars_files:
    - ../local_or_remote.yml

  vars:
    IP: 127.0.0.1
    PORT: 8081
    CALLS_PORT: 8441
    MATTERMOST_PORT: 8081
    MATTERMOST_URL: "http://{{ IP }}:{{ MATTERMOST_PORT }}/api/v4"
    MATTERMOST_WEBSOCKET_URL: "http://{{ IP }}:{{ MATTERMOST_PORT }}/api/v4/websocket"
    SYSTEM_ADMIN_EMAIL: "{{ lookup('env', 'SYSTEM_ADMIN_EMAIL') | default('admin@example.com', true) }}"
    SYSTEM_ADMIN_USERNAME: "{{ lookup('env', 'SYSTEM_ADMIN_USERNAME') | default('admin', true) }}"
    SYSTEM_ADMIN_PASSWORD: "{{ lookup('env', 'SYSTEM_ADMIN_PASSWORD') | default('AdminPassword123', true) }}"
    # Provide a definite key here or source it via group_vars/all.yml as deepseek_api_key
    DEEPSEEK_API_KEY: "{{ deepseek_api_key | default('sk-c6834c0711a94d6ea027ee1f955809e1', true) }}"

  tasks:
    # Docker collection for Ansible (root to avoid socket permission issues)
    - name: Ensure community.docker collection is installed
      become: true
      command: ansible-galaxy collection install community.docker --force --timeout 120
      delegate_to: localhost
      run_once: true
      retries: 5
      delay: 10

    # ── Mattermost (unchanged): compose deployment is in the included tasks
    - name: Include Mattermost setup tasks (compose-based)
      include_tasks: /janus/services/templates/mattermost/mattermost.yml

    # Wait for Mattermost API to be available (same endpoint and status as before)
    - name: Wait for Mattermost API to be available (401 expected)
      become: true
      uri:
        url: "{{ MATTERMOST_URL }}/users"
        method: GET
        status_code: 401
        timeout: 10
      register: api_result
      until: api_result.status == 401
      retries: 120
      delay: 5

    # ── Bot code and assets at EXACT same locations as before
    - name: Copy mattermost_bot directory to VM (same path as before)
      copy:
        src: ./mattermost_bot/
        dest: /home/{{ user_var }}/mattermost_bot/
        mode: '0755'
      become: true
      become_user: "{{ user_var }}"

    - name: Copy images directory to VM (same path as before)
      copy:
        src: ./images/
        dest: /home/{{ user_var }}/images/
        mode: '0755'
      become: true
      become_user: "{{ user_var }}"

    # Ensure assigned_images.json exists at the path referenced by bot.py (hard-coded to /home/vagrant)
    # If user_var == vagrant (as in your previous setup), this file will match exactly.
    - name: Ensure /home/{{ user_var }}/assigned_images.json exists
      copy:
        dest: /home/{{ user_var }}/assigned_images.json
        content: "{}\n"
        force: no
        mode: '0644'
      become: true

    # ── Containerization of the bot using the SAME paths:
    # Build context = /home/{{ user_var }}/mattermost_bot (no copy into another path)
    # Runtime volume bind: mount /home/{{ user_var }} at the SAME path inside the container
    # HOME=/home/{{ user_var }} to preserve utils/config expectations.
    - name: Create Dockerfile for mattermost_bot (no path changes inside container)
      copy:
        dest: /home/{{ user_var }}/mattermost_bot/Dockerfile
        content: |
          FROM python:3.11-slim
          ENV PYTHONDONTWRITEBYTECODE=1 PYTHONUNBUFFERED=1
          # Keep working dir exactly as before
          WORKDIR /home/{{ USER_VAR }}/mattermost_bot
          # Install system deps
          RUN apt-get update && apt-get install -y --no-install-recommends \
                ca-certificates build-essential && \
              rm -rf /var/lib/apt/lists/*
          # Install Python deps (no code copy here; we will bind-mount the code at runtime)
          RUN pip install --no-cache-dir \
                websocket-client \
                crewai \
                langchain-core \
                langchain-openai \
                litellm \
                httpx \
                requests
          # Default command: run the same entrypoint
          CMD ["python", "main.py"]
      vars:
        USER_VAR: "{{ user_var }}"

    - name: Create docker-compose.yml for mattermost_bot (host network, same env, same paths)
      copy:
        dest: /home/{{ user_var }}/mattermost_bot/docker-compose.yml
        content: |
          version: '3.8'
          services:
            mattermost_bot:
              build: .
              container_name: mattermost_bot
              # Use host network so http://127.0.0.1:8081 remains valid from inside container
              network_mode: "host"
              environment:
                MATTERMOST_URL: "{{ MATTERMOST_URL }}"
                MATTERMOST_WEBSOCKET_URL: "{{ MATTERMOST_WEBSOCKET_URL }}"
                SYSTEM_ADMIN_EMAIL: "{{ SYSTEM_ADMIN_EMAIL }}"
                SYSTEM_ADMIN_USERNAME: "{{ SYSTEM_ADMIN_USERNAME }}"
                SYSTEM_ADMIN_PASSWORD: "{{ SYSTEM_ADMIN_PASSWORD }}"
                DEEPSEEK_API_KEY: "{{ DEEPSEEK_API_KEY }}"
                HOME: "/home/{{ user_var }}"
              # Bind-mount the entire home to keep EXACT paths (/home/{{ user_var }}/mattermost_bot, /home/{{ user_var }}/images, assigned_images.json)
              volumes:
                - /home/{{ user_var }}:/home/{{ user_var }}
              restart: always

    - name: Build and run mattermost_bot container via compose
      become: true
      community.docker.docker_compose_v2:
        project_src: /home/{{ user_var }}/mattermost_bot
        files:
          - docker-compose.yml
        state: present
